= kerbal-control
A project to add some more control to the PS5 Kerbal simulation.

* link:https://www.kerbalspaceprogram.com/[^]

== Starting point
After installing Kerbal on the PS5 and playing it for a while it quickly became clear that the controllers alone are not enough to enjoy the game.
The search began to find some way of improving things.
Kerbal allows control vi the PS5 controllers AND via keyboard and mouse.
This means it should be possible to add some easy toggles/switches/rotary encoders to pass information to the game.
The first switch would be the space bar which kerbal uses to trigger stages.

=== kerbal key bindings
The following is a list of key bindings we can work with.

.Key bindings for Kerbal
* link:https://wiki.kerbalspaceprogram.com/wiki/Key_bindings[^]

=== Arduino - pro micro (5V)
Initial choice for a prototype is the AVR ATmega32u4 8-bit microcontroller which has a USB controller and can therefore be used as both a keyboard and mouse if required.

"The Pro Micro is an Arduino-compatible microcontroller board developed under an open hardware license by Sparkfun. Clones of the Pro Micro are often used as a lower-cost alternative to a Teensy 2.0 as a basis for a DIY keyboard controller/converter when a lower number of pins would suffice."
-- https://deskthority.net/wiki/Arduino_Pro_Micro

=== WS2812 LEDs
Because it's always good to have status LEDs an the WS2812 is one that is both easy to get and has good libraries with fastled and adafruit.

.Fastled
* link:https://github.com/FastLED/FastLED[^]
* link:https://fastled.io/[^]

The fastled library looks like a good choice although it doesn't (yet) support RGBW LEDs for which I have a LED ring.
The other LED rings I have are less tightly packed with LEDs.
As I have a few WS2812 strips on top of the one RGBW ring the choice went towards the WS2812 to be able to mix the strip and ring.
RGBW is better suited to lighting anyway so let's use it for that later.

== First prototype
To get started I went to an example for LEDs to be able to set a LED with a key/button.

.First LED example (arduino IDE)
[source, C]
----
#include <FastLED.h>
#define NUM_LEDS 22
#define NUM_RING_LEDS 12
#define DATA_PIN 7

CRGB leds[NUM_LEDS];

void setup() { 
    FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
    leds[12] = CHSV(0, 255, 16);
    leds[13] = CHSV(33, 255, 16);
    leds[14] = CHSV(65, 255, 16);
    leds[15] = CHSV(97, 255, 16);
    leds[16] = CHSV(129, 255, 16);
    leds[17] = CHSV(161, 255, 16);
    leds[18] = CHSV(193, 255, 16);
    leds[19] = CHSV(225, 255, 16);
    leds[20] = CHSV(255, 255, 16);
    leds[21] = CHSV(255, 255, 16);
    FastLED.show();
}

void loop() {
    for(int dot = 0; dot < NUM_RING_LEDS; dot++) { 
        leds[dot] = CHSV(64, 255, 16);
        FastLED.show();
        // clear this led for the next time around the loop
        leds[dot] = CRGB::Black;
        delay(150);
    }
}
----

